services:
  mysql:
    container_name: mysql
    image: docker.io/library/mysql:9.4.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpwd
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppwd
    expose:
      - "3306"
    volumes:
      - ./db/data:/var/lib/mysql:z
    stdin_open: true
    tty: true

  composer:
    container_name: composer
    image: docker.io/library/composer:2.8.12
    working_dir: /backend
    volumes:
      - ./backend:/backend:z
    stdin_open: true
    tty: true
    # Commande de base (sinon le container ne fait rien)
    entrypoint: ["tail", "-f", "/dev/null"]

  backend:
    container_name: backend
    image: docker.io/library/php:8.2-apache
    # working_dir: /backend
    # environment:
    #   APACHE_DOCUMENT_ROOT: /backend/public
    expose:
      - "${BACKEND_PORT}"
    depends_on:
      - mysql
    volumes:
      - ./backend:/backend:z
      - ./backend/public:/var/www/html:z
    stdin_open: true
    tty: true

  phpmyadmin:
    container_name: phpmyadmin
    image: docker.io/library/phpmyadmin:5.2.2-apache
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: rootpwd
    ports:
      - "8081:80"
    depends_on:
      - mysql
    stdin_open: true
    tty: true

  frontend:
    container_name: frontend
    image: docker.io/library/node:22
    working_dir: /frontend
    command: |
      sh -c '
      npm install
      npm run dev -- --host
      '
    expose:
      - "${FRONTEND_PORT}"
    volumes:
      - ./frontend:/frontend:z
    stdin_open: true
    tty: true

  proxy:
    container_name: proxy
    image: docker.io/library/nginx:1.29.1
    working_dir: /proxy
    ports:
      - "${PROXY_PORT}:${NGINX_PORT}"
      - "${PROXY_PORT_TLS}:443"
    environment:
      #   - NGINX_HOST=${NGINX_HOST}
      #   - NGINX_PORT=${NGINX_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
      - SSL_CERT_FILE=${SSL_CERT_FILE}
      - SSL_KEY_FILE=${SSL_KEY_FILE}
    volumes:
      - ./proxy:/proxy:z
      - ./proxy/templates:/etc/nginx/templates:z
      - ./proxy/certs:/etc/nginx/ssl:z
      - ./proxy/logs:/var/log/nginx:z
      - ./proxy/gen-local-ca-tls.sh:/docker-entrypoint.d/00-gen-local-ca-tls.sh:z
    stdin_open: true
    tty: true
